{
    "swagger": "2.0",
    "info": {
        "description": "Это серверная часть для приложения знакомств. Все эндпоинты, требующие авторизации, ожидают JWT токен в заголовке 'Authorization: Bearer {token}'.",
        "title": "API для Сервиса Знакомств",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Ваше Имя",
            "email": "ваш.email@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8081",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Аутентифицирует пользователя и возвращает JWT токен в теле ответа как обычный текст (plain text)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Вход пользователя в систему",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "eyJhbGciOiJIU...",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Создает нового пользователя и возвращает JWT токен для доступа к защищенным ресурсам",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/filter": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает текущие настройки фильтра поиска для аутентифицированного пользователя.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Filters"
                ],
                "summary": "Получение фильтра поиска",
                "responses": {
                    "200": {
                        "description": "Успешный ответ с данными фильтра",
                        "schema": {
                            "$ref": "#/definitions/filter.GetFilterDto"
                        }
                    },
                    "404": {
                        "description": "Фильтр для данного пользователя не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/filter/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новый фильтр поиска для текущего аутентифицированного пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Filters"
                ],
                "summary": "Создание фильтра поиска",
                "parameters": [
                    {
                        "description": "Данные для создания фильтра",
                        "name": "filterData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/filter.CreateFilterDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Фильтр успешно создан",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/filter/update": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет существующий фильтр поиска для текущего пользователя. Позволяет частичное обновление: можно передать только те поля, которые нужно изменить.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Filters"
                ],
                "summary": "Обновление фильтра поиска",
                "parameters": [
                    {
                        "description": "Данные для обновления фильтра (можно передавать только изменяемые поля)",
                        "name": "filterUpdateData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/filter.UpdateFilterDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Фильтр успешно обновлен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Фильтр не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/like/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех лайков, поставленных текущим авторизованным пользователем.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Likes"
                ],
                "summary": "Получить список своих лайков",
                "responses": {
                    "200": {
                        "description": "Список лайков",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/like.LikeDto"
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/like/{target_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Текущий авторизованный пользователь ставит лайк другому пользователю. Если лайк взаимный, создается мэтч.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Likes"
                ],
                "summary": "Создать лайк",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя, которого нужно лайкнуть",
                        "name": "target_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created - Лайк успешно создан",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ID пользователя в URL",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/photo/{id}/all": {
            "get": {
                "description": "Возвращает JSON-массив со строками-ссылками на все фотографии пользователя.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "summary": "Получить все ссылки на фото пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID Пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Массив ссылок на фотографии",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный ID пользователя",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/photo/{uuid}": {
            "get": {
                "description": "Возвращает бинарные данные фотографии по её UUID",
                "produces": [
                    "image/*"
                ],
                "tags": [
                    "Photo"
                ],
                "summary": "Получить файл фотографии",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID фотографии",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Бинарные данные файла фотографии",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос (UUID не указан)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Фотография не найдена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает данные профиля текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Получение информации о профиле",
                "responses": {
                    "200": {
                        "description": "Информация о профиле",
                        "schema": {
                            "$ref": "#/definitions/profile.GetInfoResponseDto"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает данные профиля текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Обновить данные о профиле",
                "parameters": [
                    {
                        "description": "Данные для обновления",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.UpdateInfoRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о профиле",
                        "schema": {
                            "$ref": "#/definitions/profile.GetInfoResponseDto"
                        }
                    }
                }
            }
        },
        "/profile/avatar": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает ID текущего аватара авторизованного пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Получить аватар пользователя",
                "responses": {
                    "200": {
                        "description": "ID аватара пользователя",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found - аватар не установлен",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile/interests": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает данные профиля текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Обновить данные об интересах",
                "parameters": [
                    {
                        "description": "Данные для обновления",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/profile.UpdateInterestRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список интересов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Interest"
                            }
                        }
                    }
                }
            }
        },
        "/profile/photo/change-avatar/{photoId}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Устанавливает указанную фотографию как аватар пользователя. Только фотографии, принадлежащие пользователю, могут быть установлены как аватар.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Обновление аватара пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID фотографии для установки как аватар",
                        "name": "photoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID нового аватара",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Фотография не найдена или не принадлежит пользователю",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile/photo/{photoId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет фотографию, принадлежащую текущему авторизованному пользователю.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Удаление фотографии пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID фотографии для удаления",
                        "name": "photoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content - фотография успешно удалена",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Фотография не найдена или нет прав на удаление",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile/photos": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Загружает файл фотографии для текущего пользователя. Принимает multipart/form-data с ключом \"photo\".",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Добавить фотографию в профиль",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Файл фотографии для загрузки",
                        "name": "photo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "UUID созданной фотографии",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос (например, файл не предоставлен)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Достигнут лимит на количество фотографий",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/recommendations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает отсортированный по релевантности (match score) список пользователей. Параметры пагинации передаются через query-параметры в URL.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Recommendations"
                ],
                "summary": "Получение списка рекомендаций",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Номер страницы. По умолчанию: 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество элементов на странице. По умолчанию: 20",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ со списком рекомендованных пользователей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/recommendations.ScoredUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный формат параметров пагинации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Текущий пользователь или его фильтр не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequestDto": {
            "type": "object",
            "required": [
                "password",
                "phone"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterRequestDto": {
            "type": "object",
            "required": [
                "age",
                "name",
                "password",
                "phone",
                "sex_id"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "minimum": 18
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string",
                    "minLength": 8
                },
                "sex_id": {
                    "type": "integer"
                }
            }
        },
        "filter.CreateFilterDto": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                },
                "max_age": {
                    "type": "integer"
                },
                "min_age": {
                    "type": "integer"
                },
                "sex_id": {
                    "type": "integer"
                }
            }
        },
        "filter.GetFilterDto": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                },
                "max_age": {
                    "type": "integer"
                },
                "min_age": {
                    "type": "integer"
                },
                "sex_id": {
                    "type": "integer"
                }
            }
        },
        "filter.UpdateFilterDto": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                },
                "max_age": {
                    "type": "integer"
                },
                "min_age": {
                    "type": "integer"
                },
                "sex_id": {
                    "type": "integer"
                }
            }
        },
        "like.LikeDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "target_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.Interest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "profile.GetInfoResponseDto": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/profile.ReferenceDto"
                },
                "age": {
                    "type": "integer"
                },
                "attitude_to_alcohol": {
                    "$ref": "#/definitions/profile.ReferenceDto"
                },
                "attitude_to_smoking": {
                    "$ref": "#/definitions/profile.ReferenceDto"
                },
                "avatar": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "children": {
                    "type": "boolean"
                },
                "city": {
                    "type": "string"
                },
                "education": {
                    "$ref": "#/definitions/profile.ReferenceDto"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/profile.ReferenceDto"
                    }
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "photo": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sex": {
                    "$ref": "#/definitions/profile.ReferenceDto"
                },
                "type_of_dating": {
                    "$ref": "#/definitions/profile.ReferenceDto"
                },
                "worldview": {
                    "$ref": "#/definitions/profile.ReferenceDto"
                },
                "zodiac_sign": {
                    "$ref": "#/definitions/profile.ReferenceDto"
                }
            }
        },
        "profile.ReferenceDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "profile.UpdateInfoRequestDto": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "attitude_to_alcohol_id": {
                    "type": "integer"
                },
                "attitude_to_smoking_id": {
                    "type": "integer"
                },
                "bio": {
                    "type": "string"
                },
                "children": {
                    "type": "boolean"
                },
                "city": {
                    "type": "string"
                },
                "education_id": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sex_id": {
                    "type": "integer"
                },
                "type_of_dating_id": {
                    "type": "integer"
                },
                "worldview_id": {
                    "type": "integer"
                },
                "zodiac_sign_id": {
                    "type": "integer"
                }
            }
        },
        "profile.UpdateInterestRequestDto": {
            "type": "object",
            "required": [
                "interests"
            ],
            "properties": {
                "interests": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "recommendations.ScoredUser": {
            "type": "object",
            "properties": {
                "score": {
                    "type": "number",
                    "format": "float64"
                },
                "userID": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}